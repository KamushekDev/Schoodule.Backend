// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Schoodule.DataAccess;

namespace Schoodule.DataAccess.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210304025817_ChangedSchoolType2")]
    partial class ChangedSchoolType2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("Schoodule.DataAccess.Entities.GroupEntity", b =>
                {
                    b.Property<long>("GroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("group_id")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.Property<long>("SchoolId")
                        .HasColumnType("bigint")
                        .HasColumnName("school_id");

                    b.HasKey("GroupId");

                    b.HasIndex("SchoolId");

                    b.ToTable("group");
                });

            modelBuilder.Entity("Schoodule.DataAccess.Entities.SchoolEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("school_id")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("name");

                    b.Property<long>("SchoolTypeId")
                        .HasColumnType("bigint")
                        .HasColumnName("school_type_id");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("SchoolTypeId");

                    b.ToTable("school");
                });

            modelBuilder.Entity("Schoodule.DataAccess.Entities.SchoolTypeEntity", b =>
                {
                    b.Property<long>("SchoolTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("school_type_id")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.HasKey("SchoolTypeId");

                    b.ToTable("school_type");
                });

            modelBuilder.Entity("Schoodule.DataAccess.Entities.GroupEntity", b =>
                {
                    b.HasOne("Schoodule.DataAccess.Entities.SchoolEntity", "School")
                        .WithMany("Groups")
                        .HasForeignKey("SchoolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("School");
                });

            modelBuilder.Entity("Schoodule.DataAccess.Entities.SchoolEntity", b =>
                {
                    b.HasOne("Schoodule.DataAccess.Entities.SchoolTypeEntity", "SchoolType")
                        .WithMany("Schools")
                        .HasForeignKey("SchoolTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SchoolType");
                });

            modelBuilder.Entity("Schoodule.DataAccess.Entities.SchoolEntity", b =>
                {
                    b.Navigation("Groups");
                });

            modelBuilder.Entity("Schoodule.DataAccess.Entities.SchoolTypeEntity", b =>
                {
                    b.Navigation("Schools");
                });
#pragma warning restore 612, 618
        }
    }
}
